<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.craffic.convey.jobserver.dao.PersonMapper">

    <resultMap id="BaseResultMap" type="com.craffic.convey.jobserver.model.Person">
        <id property="idcardNo" column="IDCARD_NO" jdbcType="VARCHAR"></id>
        <result property="name" column="NAME" jdbcType="VARCHAR"></result>
        <result property="gender" column="GENDER" jdbcType="VARCHAR"></result>
        <result property="birthDate" column="BIRTH_DATE" jdbcType="TIMESTAMP"></result>
        <result property="age" column="AGE" jdbcType="NUMERIC"></result>
        <result property="nativePlaceCode" column="NATIVE_PLACE_CODE" jdbcType="NUMERIC"></result>
        <result property="homeAddress" column="HOME_ADDRESS" jdbcType="VARCHAR"></result>
        <result property="workAddress" column="WORK_ADDRESS" jdbcType="VARCHAR"></result>
        <result property="professionCode" column="PROFESSION_CODE" jdbcType="NUMERIC"></result>
        <result property="granduteSchoolCode" column="GRANDUATE_SCHOOL_CODE" jdbcType="NUMERIC"></result>
        <result property="createdDate" column="CREATED_DATE" jdbcType="TIMESTAMP"></result>
        <result property="createdBy" column="CREATED_BY" jdbcType="VARCHAR"></result>
        <result property="updateDate" column="UPDATE_DATE" jdbcType="TIMESTAMP"></result>
        <result property="updateBy" column="UPDATE_BY" jdbcType="VARCHAR"></result>
    </resultMap>

    <sql id="BaseColumns">
        IDCARD_NO, NAME, GENDER, BIRTH_DATE, AGE, NATIVE_PLACE_CODE, HOME_ADDRESS, WORK_ADDRESS, PROFESSION_CODE, GRANDUATE_SCHOOL_CODE,
        CREATED_DATE, CREATED_BY, UPATE_DATE, UPDATE_BY
    </sql>

    <select id="getAllPersons" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumns" />
          FROM PERSON
    </select>

    <select id="queryPersonsByCondition" parameterType="com.craffic.convey.jobserver.req.PersonReq" resultMap="BaseResultMap">
        SELECT * FROM (
        　　SELECT A.*, rownum r FROM (
        　　　　SELECT *
                FROM PERSON P
               WHERE 1 = 1
                <if test="person.idcardNo != null">
                    AND P.IDCARD_NO = #{person.idcardNo,jdbcType=VARCHAR}
                </if>
                <if test="person.name != null">
                    AND P.NAME = #{person.name,jdbcType=VARCHAR}
                </if>
                <if test="person.gender != null">
                    AND P.GENDER = #{person.gender,jdbcType=VARCHAR}
                </if>
                <if test="person.birthDateStart != null and person.birthDateEnd != null">
                    AND P.BIRTH_DATE BETWEEN #{person.birthDateStart,jdbcType=DATE} AND #{person.birthDateEnd,jdbcType=DATE}
                </if>
                <if test="person.nativePlaceCode != null">
                    AND P.NATIVE_PLACE_CODE = #{person.nativePlaceCode,jdbcType=NUMERIC}
                </if>
                <if test="person.homeAddress != null">
                    AND P.HOME_ADDRESS = #{person.homeAddress,jdbcType=VARCHAR}
                </if>
                <if test="person.workAddress != null">
                    AND P.WORK_ADDRESS = #{person.workAddress,jdbcType=VARCHAR}
                </if>
                <if test="person.ageStart != null and person.ageEnd != null">
                    AND P.AGE BETWEEN #{person.ageStart,jdbcType=NUMERIC} AND #{person.ageEnd,jdbcType=NUMERIC}
                </if>
                <if test="person.professionCode != null">
                    AND P.PROFESSION_CODE = #{person.professionCode,jdbcType=NUMERIC}
                </if>
                <if test="person.granduteSchoolCode != null">
                    AND P.GRANDUATE_SCHOOL_CODE = #{person.granduteSchoolCode,jdbcType=NUMERIC}
                </if>
        　　) A WHERE rownum &lt;= #{person.endRecord,jdbcType=NUMERIC}
        ) B WHERE r > #{person.startRecord,jdbcType=NUMERIC}
    </select>

    <select id="queryTotalNum" resultType="java.lang.Long">
        SELECT count(*) cnt
          FROM PERSON P
         WHERE 1 = 1
         <if test="person.idcardNo != null">
             AND P.IDCARD_NO = #{person.idcardNo,jdbcType=VARCHAR}
         </if>
         <if test="person.name != null">
             AND P.NAME = #{person.name,jdbcType=VARCHAR}
         </if>
         <if test="person.gender != null">
             AND P.GENDER = #{person.gender,jdbcType=VARCHAR}
         </if>
         <if test="person.birthDateStart != null and person.birthDateEnd != null">
             AND P.BIRTH_DATE BETWEEN #{person.birthDateStart,jdbcType=DATE} AND #{person.birthDateEnd,jdbcType=DATE}
         </if>
         <if test="person.nativePlaceCode != null">
             AND P.NATIVE_PLACE_CODE = #{person.nativePlaceCode,jdbcType=NUMERIC}
         </if>
         <if test="person.homeAddress != null">
             AND P.HOME_ADDRESS = #{person.homeAddress,jdbcType=VARCHAR}
         </if>
         <if test="person.workAddress != null">
             AND P.WORK_ADDRESS = #{person.workAddress,jdbcType=VARCHAR}
         </if>
         <if test="person.ageStart != null and person.ageEnd != null">
             AND P.AGE BETWEEN #{person.ageStart,jdbcType=NUMERIC} AND #{person.ageEnd,jdbcType=NUMERIC}
         </if>
         <if test="person.professionCode != null">
             AND P.PROFESSION_CODE = #{person.professionCode,jdbcType=NUMERIC}
         </if>
         <if test="person.granduteSchoolCode != null">
             AND P.GRANDUATE_SCHOOL_CODE = #{person.granduteSchoolCode,jdbcType=NUMERIC}
         </if>
    </select>

    <insert id="insertSelective" parameterType="com.craffic.convey.jobserver.model.Person">
        INSERT INTO PERSON (<include refid="BaseColumns" />) VALUES (
            #{idcardNo,jdbcType=VARCHAR},
            #{name,jdbcType=VARCHAR},
            #{gender,jdbcType=VARCHAR},
            #{birthDate, jdbcType=TIMESTAMP},
            #{age,jdbcType=NUMERIC},
            #{nativePlaceCode,jdbcType=NUMERIC},
            #{homeAddress,jdbcType=VARCHAR},
            #{workAddress,jdbcType=VARCHAR},
            #{professionCode,jdbcType=NUMERIC},
            #{granduteSchoolCode,jdbcType=NUMERIC},
            #{createdDate,jdbcType=TIMESTAMP},
            #{createdBy,jdbcType=VARCHAR},
            #{updateDate,jdbcType=TIMESTAMP},
            #{updateBy,jdbcType=VARCHAR}
        )
    </insert>
</mapper>

